// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhotoSearch.Data;
using PhotoSearch.Data.GeoJson;
using PhotoSearch.Data.Models;

#nullable disable

namespace PhotoSearch.Data.Migrations
{
    [DbContext(typeof(PhotoSearchContext))]
    partial class PhotoSearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PhotoSearch.Data.Models.Photo", b =>
                {
                    b.Property<string>("RelativePath")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CaptureDateUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExactPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ImportedDateUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<FeatureCollection>("LocationInformation")
                        .HasColumnType("jsonb");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<Dictionary<string, string>>("Metadata")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Dictionary<string, PhotoSummary>>("PhotoSummaries")
                        .HasColumnType("jsonb");

                    b.Property<string>("PublicUrl")
                        .HasColumnType("text");

                    b.Property<long>("SizeKb")
                        .HasColumnType("bigint");

                    b.Property<Thumbnail>("Thumbnails")
                        .HasColumnType("jsonb");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("RelativePath");

                    b.ToTable("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
